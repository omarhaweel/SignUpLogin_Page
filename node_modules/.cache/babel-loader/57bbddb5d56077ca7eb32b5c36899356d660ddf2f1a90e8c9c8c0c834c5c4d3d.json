{"ast":null,"code":"var _jsxFileName = \"/Users/omarhaweel/Desktop/hello-react/src/Components/LoginSignup/LoginSignup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './LoginSignup.css';\nimport user_icon from '../Assets/person.png';\nimport email_icon from '../Assets/email.png';\nimport password_icon from '../Assets/password.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginSignup = () => {\n  _s();\n  const [action, setAction] = useState(\"Sign Up\");\n  const [userData, setUserData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAction = async () => {\n    if (action === \"Sign Up\") {\n      // Handle user registration\n      try {\n        const response = await axios.post('http://localhost:5002/register', userData);\n        console.log(response.data);\n        // Implement what should happen after successful registration\n      } catch (error) {\n        console.error('There was an error!', error);\n      }\n    } else {\n      // Handle user login (You'll need to implement this part)\n    }\n  };\n  const toggleAction = newAction => {\n    setAction(newAction);\n    if (newAction === \"Sign Up\") {\n      // Optionally reset user data when switching back to sign up\n      setUserData({\n        name: '',\n        email: '',\n        password: ''\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-container\",\n      children: [action === \"Login\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit\",\n        onClick: () => toggleAction(\"Sign Up\"),\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit\",\n        onClick: handleAction,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), action === \"Sign Up\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit gray\",\n        onClick: () => toggleAction(\"Login\"),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit\",\n        onClick: () => toggleAction(\"Login\"),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginSignup, \"FsuJ2Sr4C9XZYRiHCeKqEkFa3dQ=\");\n_c = LoginSignup;\nexport default LoginSignup;\nvar _c;\n$RefreshReg$(_c, \"LoginSignup\");","map":{"version":3,"names":["React","useState","axios","user_icon","email_icon","password_icon","jsxDEV","_jsxDEV","LoginSignup","_s","action","setAction","userData","setUserData","name","email","password","handleChange","e","target","value","handleAction","response","post","console","log","data","error","toggleAction","newAction","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/omarhaweel/Desktop/hello-react/src/Components/LoginSignup/LoginSignup.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './LoginSignup.css';\n\nimport user_icon from '../Assets/person.png';\nimport email_icon from '../Assets/email.png';\nimport password_icon from '../Assets/password.png';\n\nconst LoginSignup = () => {\n  const [action, setAction] = useState(\"Sign Up\");\n  const [userData, setUserData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n\n  const handleChange = (e) => {\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n  };\n\n  const handleAction = async () => {\n    if (action === \"Sign Up\") {\n      // Handle user registration\n      try {\n        const response = await axios.post('http://localhost:5002/register', userData);\n        console.log(response.data);\n        // Implement what should happen after successful registration\n      } catch (error) {\n        console.error('There was an error!', error);\n      }\n    } else {\n      // Handle user login (You'll need to implement this part)\n    }\n  };\n\n  const toggleAction = (newAction) => {\n    setAction(newAction);\n    if (newAction === \"Sign Up\") {\n      // Optionally reset user data when switching back to sign up\n      setUserData({ name: '', email: '', password: '' });\n    }\n  };\n\n  return (\n    <div className='container'>\n      {/* ... Other component code ... */}\n\n      <div className='submit-container'>\n        {action === \"Login\" ? (\n          <div \n            className=\"submit\" \n            onClick={() => toggleAction(\"Sign Up\")}\n          > \n            Sign Up\n          </div>\n        ) : (\n          <div \n            className=\"submit\" \n            onClick={handleAction}\n          > \n            Sign Up\n          </div>\n        )}\n        {action === \"Sign Up\" ? (\n          <div \n            className=\"submit gray\" \n            onClick={() => toggleAction(\"Login\")}\n          > \n            Login\n          </div>\n        ) : (\n          <div \n            className=\"submit\" \n            onClick={() => toggleAction(\"Login\")}\n          > \n            Login\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default LoginSignup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}